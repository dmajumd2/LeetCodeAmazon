https://leetcode.com/problems/binary-tree-level-order-traversal-ii/?tab=Description

Given a binary tree, return the bottom-up level order traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).

For example:
Given binary tree [3,9,20,null,null,15,7],
    3
   / \
  9  20
    /  \
   15   7
return its bottom-up level order traversal as:
[
  [15,7],
  [9,20],
  [3]
]

public class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
        List<List<Integer>> res = new ArrayList<>();
        helper(root, 0, res);
        return res;
    }
    private void helper(TreeNode root, int level, List<List<Integer>> res) {
        if (root == null) {
            return;
        }
        if (res.size() <= level) {
            List<Integer> cur = new ArrayList<>();
            res.add(0, cur);
        }
        helper(root.left, level + 1, res);
        helper(root.right, level + 1, res);
        res.get(res.size() - level - 1).add(root.val);
    }
}
