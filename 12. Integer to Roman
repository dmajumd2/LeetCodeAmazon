/* 12. Integer to Roman
Given an integer, convert it to a roman numeral.

Input is guaranteed to be within the range from 1 to 3999. */

public class Solution {
    
    public String intToRoman(int num) {
        String M[] = {"", "M", "MM", "MMM" }; //0, 1000-3000
        String C[] = {"", "C","CC", "CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"}; // 0, 100-900
        String X[] = {"", "X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"}; //0, 10-99
        String I[] = {"", "I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"}; // 0 - 9
        return M[num/1000] + C[(num % 1000) / 100] +  X[ (num % 100) / 10] + I[(num % 10)];
    }
}


public class Solution {
    
    public String intToRoman(int num) {
        int[] val = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};
        String[] strs = {"M", "CM", "D", "CD", "C", "XC", "L", "XL","X", "IX", "V", "IV", "I"};
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < val.length; i++) {
            while (num >= val[i]) {
                num-= val[i];
                sb.append(strs[i]);
            }
        }
        return sb.toString();
    }
}
