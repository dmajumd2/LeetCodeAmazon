https://leetcode.com/problems/merge-k-sorted-lists/?tab=Description

Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        if (lists == null) {
            return dummy;
        }
        PriorityQueue<ListNode> minHeap = new PriorityQueue<ListNode>(
            11, new Comparator<ListNode>(){
                public int compare(ListNode l1, ListNode l2) {
                    if (l1.val == l2.val) {
                        return 0;
                    }
                    return l1.val < l2.val ? -1 : 1;
                }
            });
        for (ListNode node : lists) {
            if (node != null) {
                minHeap.offer(node);
            }
            
        }
      
        while (!minHeap.isEmpty()) {
            ListNode tmp = minHeap.poll();
            cur.next = tmp;
            if (tmp.next != null) {
                minHeap.offer(tmp.next);
            }
            tmp.next = null;
            cur = cur.next;
        }
        return dummy.next;
    }
}
