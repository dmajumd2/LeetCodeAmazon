https://leetcode.com/problems/subsets-ii/?tab=Description

Given a collection of integers that might contain duplicates, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,2], a solution is:

[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

public class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
         List<Integer> cur = new ArrayList<>();
        List<List<Integer>> res = new ArrayList<>();
        Arrays.sort(nums);
        helper(nums, 0, cur, res);
        return res;
    }
    private void helper(int[] nums, int level, List<Integer> cur, List<List<Integer>> res) {
        if (level == nums.length) {
            res.add(new ArrayList<>(cur));
            return;
        }
        cur.add(nums[level]);
        helper(nums,level + 1, cur, res);
        cur.remove(cur.size() - 1);
        while (level + 1 < nums.length && nums[level + 1] == nums[level]) {
            level++;
        }
        helper(nums, level + 1, cur, res);

    }
}
