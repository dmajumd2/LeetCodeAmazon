https://leetcode.com/problems/subsets/?tab=Description

Given a set of distinct integers, nums, return all possible subsets.

Note: The solution set must not contain duplicate subsets.

For example,
If nums = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

public class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> res = new ArrayList<>();
        List<Integer> curList = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return res;
        }
        helper(nums, 0, res, curList);
        return res;
    }
    private void helper(int[] nums, int level, List<List<Integer>> res, List<Integer> curList ) {
        if (level == nums.length) {
            res.add(new ArrayList<>(curList));
            return;
        }
        helper(nums, level + 1, res, curList);
        curList.add(nums[level]);
        helper(nums, level + 1, res, curList);
        curList.remove(curList.size() - 1);
    }
    
}
