https://leetcode.com/problems/first-missing-positive/?tab=Description
Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.

public class Solution {
    public int firstMissingPositive(int[] array) {
      if (array == null) {
          return -1;
      }
      for (int i = 0; i < array.length; i++) {
          int digit = array[i];
          while (digit <= array.length && digit > 0 && array[digit - 1] != digit) {
              swap(array, i, digit - 1);
              digit = array[i];
          }
      }
      for (int i = 0; i < array.length; i++) {
          if (array[i] != i + 1) {
              return i + 1;
          }
      }
      return array.length + 1; 
    }
    private void swap(int[] array, int left, int right) {
        int temp = array[left];
        array[left] = array[right];
        array[right] = temp;
    }
}
